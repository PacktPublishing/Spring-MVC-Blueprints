<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:security="http://www.springframework.org/schema/security"

	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<beans:import resource="dao_services.xml" />
	<mvc:annotation-driven />
	<security:global-method-security
		pre-post-annotations="enabled" />

	<security:http auto-config="false" use-expressions="true"
		entry-point-ref="authenticationEntryPoint">



		<security:intercept-url pattern="/js/**"
			access="permitAll" />
		<security:intercept-url pattern="/img/**"
			access="permitAll" />
		<security:intercept-url pattern="/ocs/login.html"
			access="permitAll" />
		<security:intercept-url pattern="/ocs/signup.html"
			access="permitAll" />

		<security:intercept-url pattern="/ocs/logout.html"
			access="permitAll" />

		<security:intercept-url pattern="/ocs/inventory/catalog.html"
			access="permitAll" />

		<security:intercept-url pattern="/ocs/**"
			access="hasAuthority('USER')" />


		<security:logout invalidate-session="true"
			logout-success-url="/ocs/login.html" logout-url="/ocs/logout.html"
			delete-cookies="JSESSIONID" />

		<security:custom-filter ref="authenticationFilter"
			position="FORM_LOGIN_FILTER" />
		<security:custom-filter position="CONCURRENT_SESSION_FILTER"
			ref="concurrencyFilter" />
		<security:access-denied-handler
			error-page="/ocs/expired" />
		<security:session-management
			session-authentication-strategy-ref="sas" />
		<security:csrf disabled="true" />
	</security:http>

	<beans:bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:constructor-arg value="/ocs/login.html" />
	</beans:bean>


	<beans:bean id="customAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/ocs/order.html" />
	</beans:bean>
	<beans:bean id="customAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/ocs/logout.html?error=true" />
	</beans:bean>

	<beans:bean id="sas"
		class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean
					class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
					<beans:constructor-arg ref="sessionRegistry" />
					<beans:property name="maximumSessions" value="1" />
					<beans:property name="exceptionIfMaximumExceeded"
						value="true" />
				</beans:bean>
				<beans:bean
					class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
					<beans:property name="migrateSessionAttributes"
						value="true" />
				</beans:bean>
				<beans:bean
					class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
					<beans:constructor-arg ref="sessionRegistry" />
				</beans:bean>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>

	<beans:bean id="authenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="sessionAuthenticationStrategy"
			ref="sas" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="authenticationFailureHandler"
			ref="customAuthenticationFailureHandler" />
		<beans:property name="authenticationSuccessHandler"
			ref="customAuthenticationSuccessHandler" />
	</beans:bean>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			ref="authenticationProvider" />

	</security:authentication-manager>


	<beans:bean id="authenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<!-- omitted -->

		<beans:property name="userDetailsService" ref="customerUserDetailsService" />
		<beans:property name="passwordEncoder" ref="passwordEncoder" /> 
		<beans:property name="saltSource" ref="saltSource" />
	</beans:bean>

	<beans:bean id="saltSource"
		class="org.springframework.security.authentication.dao.ReflectionSaltSource"> 
		<beans:property name="userPropertyToUse" value="username" /> 
	</beans:bean>

	<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"> 
		<beans:constructor-arg value="512" /> 
		<beans:property name="iterations" value="1000" /> 
		<beans:property name="encodeHashAsBase64" value="true" />
	</beans:bean>

	<beans:bean id="concurrencyFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:constructor-arg ref="sessionRegistry" />
		<beans:constructor-arg value="/session-expired" />
	</beans:bean>

	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />


</beans:beans>
